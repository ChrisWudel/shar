% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_point_process.R, R/reconstruct_pattern.R
\name{fit_point_process}
\alias{fit_point_process}
\alias{reconstruct_pattern}
\title{fit_point_process}
\usage{
fit_point_process(pattern, n_random = 19, process = "poisson")

reconstruct_pattern(pattern, n_random = 19, e_threshold = 0.01,
  max_runs = 10000, fitting = FALSE, comp_fast = FALSE,
  verbose = FALSE)
}
\arguments{
\item{pattern}{List with reconstructed patterns.}

\item{n_random}{Number of randomized RasterLayers.}

\item{process}{What point process to use. Either 'poisson' or 'cluster'}

\item{e_threshold}{Minimum energy to stop reconstruction.}

\item{max_runs}{Maximum number of iterations of e_threshold is not reached.}

\item{fitting}{It true, the pattern reconstruction starts with a fitting of a Thomas process.}

\item{comp_fast}{Should summary functions be estimated in an computational fast way.}

\item{verbose}{Print progress report.}

\item{pattern}{List with reconstructed patterns.}

\item{n_random}{Number of randomized RasterLayers.}
}
\value{
list

list
}
\description{
Create random patterns by point process fitting

Pattern reconstruction
}
\details{
The functions randomizes the observed pattern by fitting a point process to the data.
It is possible to choose between a Poisson process or a Thomas cluster process.

The functions randomizes the observed pattern by using pattern reconstruction
as described in Tscheschel & Stoyan (2006) and Wiegand & Moloney (2014). The
algorithm starts with a random reconstructed pattern, shifts a point to a new location and
keeps the change only, if the deviation between the observed and the reconstructed
pattern decreases. The pair correlation function and the nearest neighbour
distance function are used to describe the patterns. For large patterns
`comp_fast = TRUE` decreases the computational demand because no edge
correction is used and the pair correlation function is estimated based on Ripley's
K-function. For more information see \code{\link{estimate_pcf_fast}}.
}
\examples{
\dontrun{
pattern_random <- spatstat::runifpoint(n = 50)
pattern_fitted <- SHAR::fit_point_process(pattern_random, n_random = 9, process = "poisson")
}

\dontrun{
pattern_random <- spatstat::runifpoint(n = 50)
pattern_recon <- SHAR::reconstruct_pattern(pattern_random, n_random = 9, max_runs = 1000)
}

}
\references{
Plotkin, J. B., Potts, M. D., Leslie, N., Manokaran, N., LaFrankie, J. V., & Ashton, P. S. (2000).
Species-area curves, spatial aggregation, and habitat specialization in tropical forests.
Journal of Theoretical Biology, 207(1), 81–99.

Tscheschel, A., & Stoyan, D. (2006). Statistical reconstruction of random point
patterns. Computational Statistics and Data Analysis, 51(2), 859–871.

Wiegand, T., & Moloney, K. A. (2014). Handbook of spatial point-pattern analysis
in ecology. Boca Raton: Chapman and Hall/CRC Press.
}
\seealso{
\code{\link{calculate_mean_energy}} \cr
\code{\link{plot_randomized_pattern}}

\code{\link{calculate_mean_energy}} \cr
\code{\link{plot_randomized_pattern}}
}
